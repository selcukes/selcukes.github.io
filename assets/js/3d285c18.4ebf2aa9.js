"use strict";(self.webpackChunkSelcukes=self.webpackChunkSelcukes||[]).push([[2647],{9887:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>u,default:()=>x,frontMatter:()=>c,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"guides/excel-runner","title":"Selcukes Excel Runner","description":"Selcukes Excel Runner is an Excel driven cucumber runner which helps to","source":"@site/docs/03_guides/excel-runner.md","sourceDirName":"03_guides","slug":"/guides/excel-runner","permalink":"/docs/guides/excel-runner","draft":false,"unlisted":false,"editUrl":"https://github.com/selcukes/selcukes.github.io/tree/main/docs/03_guides/excel-runner.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"id":"excel-runner","title":"Selcukes Excel Runner","sidebar_position":4},"sidebar":"defaultSidebar","previous":{"title":"Selcukes Notifier","permalink":"/docs/guides/selcukes-notifier"},"next":{"title":"Selcukes TestNG","permalink":"/docs/guides/selcukes-testng"}}');var l=t(4848),r=t(8453),a=t(1470),i=t(9365);const c={id:"excel-runner",title:"Selcukes Excel Runner",sidebar_position:4},u=void 0,o={},d=[{value:"Setup",id:"setup",level:2},{value:"Usage",id:"usage",level:2},{value:"Single Excel File Tests",id:"single-excel-file-tests",level:3},{value:"Multi Excel File Tests",id:"multi-excel-file-tests",level:3}];function h(e){const n={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.a,{href:"https://github.com/selcukes/selcukes-java/tree/master/selcukes-excel-runner",children:"Selcukes Excel Runner"})," is an Excel driven cucumber runner which helps to"]}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsx)(n.li,{children:"Execute cucumber scenarios in required order"}),"\n",(0,l.jsx)(n.li,{children:"Execute only specific examples in a Scenario Outline"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"setup",children:"Setup"}),"\n",(0,l.jsxs)(n.p,{children:["Selcukes Excel Runner is primarily used as a Java dependency . We typically use a ",(0,l.jsx)(n.em,{children:"build tool"})," (such\nas ",(0,l.jsx)(n.a,{href:"https://maven.apache.org/",children:"Maven"})," or ",(0,l.jsx)(n.a,{href:"https://gradle.org/",children:"Gradle"}),") to resolve the Selcukes Excel Runner dependency."]}),"\n","\n",(0,l.jsxs)(a.A,{defaultValue:"maven",values:[{label:"Maven",value:"maven"},{label:"Gradle",value:"gradle"}],children:[(0,l.jsx)(i.A,{value:"maven",children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-xml",children:"\n<dependency>\n    <groupId>io.github.selcukes</groupId>\n    <artifactId>selcukes-excel-runner</artifactId>\n    <version>${selcukes.version}</version>\n</dependency>\n"})})}),(0,l.jsx)(i.A,{value:"gradle",children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-java",children:'dependencies{\n        implementation("io.github.selcukes:selcukes-excel-runner:${selcukes.version}")\n        }\n'})})})]}),"\n",(0,l.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,l.jsx)(n.p,{children:"ExcelTestRunner supports both single-excel-file and multi-excel file."}),"\n",(0,l.jsx)(n.h3,{id:"single-excel-file-tests",children:"Single Excel File Tests"}),"\n",(0,l.jsx)(n.p,{children:'Single Excel file tests hold both suite details and testdata details in same excel file.\nTo run cucumber tests from a single Excel file, you will need to create a "Test Suite" sheet, that will contain the following information:'}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Screen: The name of the screen"}),"\n",(0,l.jsx)(n.li,{children:"Feature: The name of the feature that the test belongs to."}),"\n",(0,l.jsx)(n.li,{children:"Test: The name of the test or Scenario."}),"\n",(0,l.jsx)(n.li,{children:"Run: Indicates that the test should be run."}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"And Have the separate sheets for each screen will contain the following mandatory column:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Test: The name of the test or Scenario."}),"\n",(0,l.jsx)(n.li,{children:"Example: The cucumber example."}),"\n",(0,l.jsx)(n.li,{children:"Run: Indicates that the test should be run."}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"In additions to above three column, you have your screen specific field column."}),"\n",(0,l.jsxs)(n.p,{children:["Here is exmple of Single excel file test ",(0,l.jsx)(n.a,{href:"https://github.com/selcukes/selcukes-java/blob/main/selcukes-excel-runner/src/test/resources/TestData.xlsx",children:"TestData.xlsx"})]}),"\n",(0,l.jsx)(n.h3,{id:"multi-excel-file-tests",children:"Multi Excel File Tests"}),"\n",(0,l.jsx)(n.p,{children:'To run cucumber tests from multiple Excel files, you will need to create a "TestSuite.xlsx" file with multiple test suite sheets like Regression, Smoke, etc. Each test suite sheet will contain the following information:'}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Screen: The name of the screen"}),"\n",(0,l.jsx)(n.li,{children:"Feature: The name of the feature that the test belongs to."}),"\n",(0,l.jsx)(n.li,{children:"Test: The name of the test or Scenario."}),"\n",(0,l.jsx)(n.li,{children:"Run: Indicates that the test should be run."}),"\n",(0,l.jsx)(n.li,{children:"DataFile: The path to the file that contains the respective screen test data."}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:["The ",(0,l.jsx)(n.code,{children:"DataFile"})," column is new in multi-excel file concept. It specifies the path to the file that contains the test data for the respective screen. The test data is similar to single-excel file test approach, only thing here, each screen has dedicated excel file instead of sheet."]}),"\n",(0,l.jsx)(n.p,{children:"Here is exmple of Multi excel file Tests"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Suite file ",(0,l.jsx)(n.a,{href:"https://github.com/selcukes/selcukes-java/blob/main/selcukes-excel-runner/src/test/resources/TestSuite.xlsx",children:"TestSuite.xlsx"})]}),"\n",(0,l.jsxs)(n.li,{children:["Google screen file ",(0,l.jsx)(n.a,{href:"https://github.com/selcukes/selcukes-java/blob/main/selcukes-excel-runner/src/test/resources/Google.xlsx",children:"Google.xlsx"})]}),"\n"]})]})}function x(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(h,{...e})}):h(e)}},9365:(e,n,t)=>{t.d(n,{A:()=>a});t(6540);var s=t(4164);const l={tabItem:"tabItem_Ymn6"};var r=t(4848);function a({children:e,hidden:n,className:t}){return(0,r.jsx)("div",{role:"tabpanel",className:(0,s.A)(l.tabItem,t),hidden:n,children:e})}},1470:(e,n,t)=>{t.d(n,{A:()=>S});var s=t(6540),l=t(4164),r=t(7559),a=t(3104),i=t(6347),c=t(205),u=t(7485),o=t(1682),d=t(679);function h(e){return s.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,s.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function x(e){const{values:n,children:t}=e;return(0,s.useMemo)((()=>{const e=n??function(e){return h(e).map((({props:{value:e,label:n,attributes:t,default:s}})=>({value:e,label:n,attributes:t,default:s})))}(t);return function(e){const n=(0,o.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function f({value:e,tabValues:n}){return n.some((n=>n.value===e))}function p({queryString:e=!1,groupId:n}){const t=(0,i.W6)(),l=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,u.aZ)(l),(0,s.useCallback)((e=>{if(!l)return;const n=new URLSearchParams(t.location.search);n.set(l,e),t.replace({...t.location,search:n.toString()})}),[l,t])]}function m(e){const{defaultValue:n,queryString:t=!1,groupId:l}=e,r=x(e),[a,i]=(0,s.useState)((()=>function({defaultValue:e,tabValues:n}){if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!f({value:e,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const t=n.find((e=>e.default))??n[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:n,tabValues:r}))),[u,o]=p({queryString:t,groupId:l}),[h,m]=function({groupId:e}){const n=function(e){return e?`docusaurus.tab.${e}`:null}(e),[t,l]=(0,d.Dv)(n);return[t,(0,s.useCallback)((e=>{n&&l.set(e)}),[n,l])]}({groupId:l}),b=(()=>{const e=u??h;return f({value:e,tabValues:r})?e:null})();(0,c.A)((()=>{b&&i(b)}),[b]);return{selectedValue:a,selectValue:(0,s.useCallback)((e=>{if(!f({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);i(e),o(e),m(e)}),[o,m,r]),tabValues:r}}var b=t(2303);const v={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var g=t(4848);function j({className:e,block:n,selectedValue:t,selectValue:s,tabValues:r}){const i=[],{blockElementScrollPositionUntilNextRender:c}=(0,a.a_)(),u=e=>{const n=e.currentTarget,l=i.indexOf(n),a=r[l].value;a!==t&&(c(n),s(a))},o=e=>{let n=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const t=i.indexOf(e.currentTarget)+1;n=i[t]??i[0];break}case"ArrowLeft":{const t=i.indexOf(e.currentTarget)-1;n=i[t]??i[i.length-1];break}}n?.focus()};return(0,g.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.A)("tabs",{"tabs--block":n},e),children:r.map((({value:e,label:n,attributes:s})=>(0,g.jsx)("li",{role:"tab",tabIndex:t===e?0:-1,"aria-selected":t===e,ref:e=>{i.push(e)},onKeyDown:o,onClick:u,...s,className:(0,l.A)("tabs__item",v.tabItem,s?.className,{"tabs__item--active":t===e}),children:n??e},e)))})}function k({lazy:e,children:n,selectedValue:t}){const r=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){const e=r.find((e=>e.props.value===t));return e?(0,s.cloneElement)(e,{className:(0,l.A)("margin-top--md",e.props.className)}):null}return(0,g.jsx)("div",{className:"margin-top--md",children:r.map(((e,n)=>(0,s.cloneElement)(e,{key:n,hidden:e.props.value!==t})))})}function T(e){const n=m(e);return(0,g.jsxs)("div",{className:(0,l.A)(r.G.tabs.container,"tabs-container",v.tabList),children:[(0,g.jsx)(j,{...n,...e}),(0,g.jsx)(k,{...n,...e})]})}function S(e){const n=(0,b.A)();return(0,g.jsx)(T,{...e,children:h(e.children)},String(n))}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>i});var s=t(6540);const l={},r=s.createContext(l);function a(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:a(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);