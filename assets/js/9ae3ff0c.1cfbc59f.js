"use strict";(self.webpackChunkSelcukes=self.webpackChunkSelcukes||[]).push([[7534],{2265:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>a,contentTitle:()=>n,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>u});const s=JSON.parse('{"id":"guides/properties","title":"Selcukes Properties","description":"Runtime Properties","source":"@site/docs/03_guides/properties.md","sourceDirName":"03_guides","slug":"/guides/properties","permalink":"/docs/guides/properties","draft":false,"unlisted":false,"editUrl":"https://github.com/selcukes/selcukes.github.io/tree/main/docs/03_guides/properties.md","tags":[],"version":"current","sidebarPosition":8,"frontMatter":{"id":"properties","title":"Selcukes Properties","sidebar_position":8},"sidebar":"defaultSidebar","previous":{"title":"Video Recorder","permalink":"/docs/guides/video-recorder"},"next":{"title":"Selcukes logger","permalink":"/docs/guides/logger"}}');var l=r(4848),o=r(8453);const i={id:"properties",title:"Selcukes Properties",sidebar_position:8},n=void 0,a={},u=[{value:"Runtime Properties",id:"runtime-properties",level:2},{value:"Logger Properties",id:"logger-properties",level:2}];function c(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(t.h2,{id:"runtime-properties",children:"Runtime Properties"}),"\n",(0,l.jsxs)(t.p,{children:["The below selcukes runtime properties provides flexibility to override default values by updating ",(0,l.jsx)(t.code,{children:"System.Property"}),"."]}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-properties",children:"selcukes.excel.runner=  # true or false. default: true\nselcukes.excel.suiteName=     # Name of Sheet in Excel Suite File\nselcukes.excel.suiteFile=       # Excel File path used as excel runner\nselcukes.reports.emailReport=      # true or false. default: true.\nselcukes.features=              # comma separated paths to feature files. example: path/to/example.feature, path/to/other.feature\nselcukes.tags=           # tag expression. example: @smoke and not @slow\nselcukes.glue=                  # comma separated package names. example: com.example.glue\nselcukes.plugin=                # comma separated plugin strings. example: pretty, json:path/to/report.json\nselcukes.reports.path=        # path/target\nselcukes.reports.timestamp=     # true or false. default: false\n"})}),"\n",(0,l.jsx)(t.h2,{id:"logger-properties",children:"Logger Properties"}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-properties",metastring:'title="selcukes-logback.yaml"',children:"# To add the FileHandler, use the following line.\nhandlers: java.util.logging.FileHandler, java.util.logging.ConsoleHandler\n\n#.level: INFO\n.level: INFO\n\n# For example, set the io.github.selcukes.core logger to only log SEVERE\nio.github.selcukes.level: ALL\nio.github.selcukes.handler: java.util.logging.ConsoleHandler\n\n# Default file output is in user's home directory.\njava.util.logging.FileHandler.pattern: build/selcukes.log\njava.util.logging.FileHandler.limit: 50000\njava.util.logging.FileHandler.count: 1\njava.util.logging.FileHandler.formatter: io.github.selcukes.commons.logging.SelcukesLoggerFormatter\njava.util.logging.FileHandler.level: FINE\n\n# Limit the message that are printed on the console to INFO and above.\njava.util.logging.ConsoleHandler.level: FINE\n#java.util.logging.ConsoleHandler.formatter : java.util.logging.SimpleFormatter\njava.util.logging.ConsoleHandler.formatter: io.github.selcukes.commons.logging.SelcukesColorFormatter\n"})})]})}function p(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,l.jsx)(t,{...e,children:(0,l.jsx)(c,{...e})}):c(e)}},8453:(e,t,r)=>{r.d(t,{R:()=>i,x:()=>n});var s=r(6540);const l={},o=s.createContext(l);function i(e){const t=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function n(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:i(e.components),s.createElement(o.Provider,{value:t},e.children)}}}]);